services:
  main_service:
    build: ./main_service
    ports:
      - "8000:8000"
    volumes:
      - ./main_service/app:/app
    networks:
      - mynetwork

  auth_service:
    build: ./auth_service
    ports:
      - "8001:8001"
    depends_on:
      - auth_db
      - kafka
    environment:
      - AUTH_DB_USER=auth_user
      - AUTH_DB_PASSWORD=auth_pass
      - AUTH_DB_NAME=auth_db
      - AUTH_DB_HOST=auth_db
      - AUTH_DB_PORT=5432
    volumes:
      - ./auth_service/app:/app
    networks:
      - mynetwork

  catalog_service:
    build: ./catalog_service
    ports:
      - "8003:8003"
    depends_on:
      - catalog_db
    environment:
      - CATALOG_DB_USER=catalog_user
      - CATALOG_DB_PASSWORD=catalog_pass
      - CATALOG_DB_NAME=catalog_db
      - CATALOG_DB_HOST=catalog_db
      - CATALOG_DB_PORT=5432
    volumes:
      - ./catalog_service/app:/app
    networks:
      - mynetwork

  cart_service:
    build: ./cart_service
    ports:
      - "8004:8004"
    depends_on:
      - cart_db
    environment:
      - CART_DB_USER=cart_user
      - CART_DB_PASSWORD=cart_pass
      - CART_DB_NAME=cart_db
      - CART_DB_HOST=cart_db
      - CART_DB_PORT=5432
    volumes:
      - ./cart_service/app:/app
    networks:
      - mynetwork

  payment_service:
    build: ./payment_service
    ports:
      - "8005:8005"
    depends_on:
      - payment_db
    environment:
      - PAYMENT_DB_USER=payment_user
      - PAYMENT_DB_PASSWORD=payment_pass
      - PAYMENT_DB_NAME=payment_db
      - PAYMENT_DB_HOST=payment_db
      - PAYMENT_DB_PORT=5432
    volumes:
      - ./payment_service/app:/app
    networks:
      - mynetwork

  analysis_service:
    build: ./analysis_service
    ports:
      - "8006:8006"
    depends_on:
      - elasticsearch
      - kafka
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    volumes:
      - ./analysis_service/app:/app
      - ./analysis_service/app/tests:/app/tests
    networks:
      - mynetwork

  elasticsearch:
    image: elasticsearch:7.17.10
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      bash -c "apt-get update && apt-get install -y curl && /usr/local/bin/docker-entrypoint.sh"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  catalog_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: catalog_user
      POSTGRES_PASSWORD: catalog_pass
      POSTGRES_DB: catalog_db
    ports:
      - "5433:5432"
    volumes:
      - catalog_db_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  cart_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: cart_user
      POSTGRES_PASSWORD: cart_pass
      POSTGRES_DB: cart_db
    ports:
      - "5434:5432"
    volumes:
      - cart_db_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  payment_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: payment_user
      POSTGRES_PASSWORD: payment_pass
      POSTGRES_DB: payment_db
    ports:
      - "5435:5432"
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  auth_db_data:
  catalog_db_data: 
  cart_db_data:
  payment_db_data:
  elasticsearch_data:
